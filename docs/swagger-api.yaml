---
openapi: 3.0.0
info:
  title: Pigeon Post Project API
  description: This is the API spec for the Pigeon Post COMPX527 Project.
  version: 1.0.0
servers:
- url: https://pigeon--post.web.app/
  description: Development Server
security:
- session_cookie: []
paths:
  /:
    get:
      summary: Serves the UI of the application
      responses:
        "200":
          description: OK
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
              example:
                cause: availability
                message: The resource was not found
  /login:
    post:
      summary: Logs in a user with a username and password
      responses:
        "201":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GETMessageListSchema'
        "401":
          description: NOT AUTHENTICATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
  /api/message:
    get:
      tags:
      - Logged In
      summary: Gets a list of all message for the current user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GETMessageListSchema'
        "401":
          description: NOT AUTHENTICATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
      security:
      - session_cookie: []
    post:
      tags:
      - Logged In
      summary: Sends a message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTMessageSchema'
        required: true
      responses:
        "201":
          description: SUCCESS
        "401":
          description: NOT AUTHENTICATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
  /api/message/{id}:
    get:
      tags:
      - Logged In
      summary: Get Mail Entry by ID
      parameters:
      - name: id
        in: path
        description: ID of the message to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GETMessageSchema'
        "401":
          description: NOT AUTHENTICATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
      security:
      - session_cookie: []
  /api/message/{id}/location:
    get:
      tags:
      - Logged In
      summary: Get Mail Entry by ID
      parameters:
      - name: id
        in: path
        description: ID of the message to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GETMessageLocationSchema'
        "401":
          description: NOT AUTHENTICATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
      security:
      - session_cookie: []
components:
  schemas:
    POSTMessageSchema:
      type: object
      properties:
        senderName:
          type: string
          example: John Doe
        receiverName:
          type: string
          example: Jane Smith
        sentDate:
          type: string
          format: date-time
        arrivalDate:
          type: string
          format: date-time
        sentPigeon:
          type: string
          example: PigeonNameOrID
    GETMessageSchema:
      type: object
      properties:
        id:
          type: string
          example: 0123456789abcdef
        name:
          type: string
          example: John Doe
        message:
          type: string
          example: "Hello, how are you?"
        arriveOrSentDate:
          type: string
          format: date
          example: 2023-08-29
    GETMessageListSchema:
      type: array
      items:
        $ref: '#/components/schemas/GETMessageSchema'
    GETMessageLocationSchema:
      type: array
      items:
        $ref: '#/components/schemas/GETMessageLocationSchema_inner'
    ErrorSchema:
      type: object
      properties:
        cause:
          type: string
          example: authentication
        message:
          type: string
          example: User not authenticated
    GETMessageLocationSchema_inner:
      type: object
      properties:
        longitude:
          type: number
          example: -122.4194
        latitude:
          type: number
          example: 37.7749
  responses:
    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSchema'
          example:
            cause: availability
            message: The resource was not found
  securitySchemes:
    session_cookie:
      type: apiKey
      name: session_cookie
      in: cookie
    password:
      type: oauth2
      flows:
        password:
          tokenUrl: http://example.com/oauth/token
          scopes:
            write: allows modifying resources
            read: allows reading resources
