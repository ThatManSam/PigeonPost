---

- name: Create policy file for bucket
  template:
    src: "{{ role_path }}/templates/s3-web-access-policy.json.j2"
    dest: "{{ role_path}}/files/s3-web-access-policy.json"

- name: Create s3 bucket for storing the dataset
  amazon.aws.s3_bucket:
    name: "{{ bucket_name_dataset }}"
    state: present
    policy: "{{ lookup('file', 's3-web-access-policy.json') }}"
    region: ap-southeast-2
    public_access:
      block_public_acls: true
      block_public_policy: true
      ignore_public_acls: true
      restrict_public_buckets: true

- name: Copy dataset to bucket
  amazon.aws.aws_s3:
    bucket: "{{ bucket_name_dataset }}"
    object: dataset/filtered_cities.csv
    src: "{{ role_path }}/../../../filtered_cities.csv"
    mode: put
    region: ap-southeast-2

- name: Create zip files for lambda functions
  command: "zip {{ item.zip_file }} {{ item.file }}"
  loop:
    - file: get_messages.py
      zip_file: get_messages.zip
    - file: receive_message.py
      zip_file: receive_message.zip
    - file: get_message_locations.py
      zip_file: get_message_locations.zip
    # - file: calculate_location_path.py
    #   zip_file: calculate_location_path.zip
  args:
    chdir: "{{ role_path }}/../../../lambdas"

- name: Create all the lambda functions
  amazon.aws.lambda:
    name: '{{ item.name }}'
    zip_file: '{{ item.zip_file }}'
    state: present
    
    runtime: 'python3.10'
    role: 'arn:aws:iam::149774945632:role/{{ item.role }}'
    handler: "{{ item.name }}.lambda_handler"
  loop:
    - name: get_messages
      role: LambdaGetMessages
      zip_file: "{{ role_path }}/../../../lambdas/get_messages.zip"
    - name: receive_messages
      role: LambdaReceiveMessage
      zip_file: "{{ role_path }}/../../../lambdas/receive_message.zip"
    - name: get_message_locations
      role: LambdaGetLocations
      zip_file: "{{ role_path }}/../../../lambdas/get_message_locations.zip"
    # - name: calculate_location_path
    #   role: LambdaCalculatePath
    #   zip_file: "{{ role_path }}/../../../lambdas/calculate_location_path.zip"

- name: Clean up zip files
  command: "rm -f {{ item.zip_file }}"
  loop:
    - zip_file: get_messages.zip
    - zip_file: receive_message.zip
    - zip_file: get_message_locations.zip
    # - zip_file: calculate_location_path.zip
  args:
    chdir: "{{ role_path }}/../../../lambdas"

- name: Create EC2 instance
      amazon.aws.ec2_instance:
        instance_type: t2.micro
        image_id: ami-0c94855ba95c71c99  
        key_name: "PigeonPostEC2"
        count: 1
        region: "ap-southeast-2"
        vpc_subnet_id: "subnet-0257bc052d50a3015"
        network:
          assign_public_ip: yes
        wait: yes
        tags:
          name: "Pigeon Post"
      register: ec2

    - name: Print instance details
      debug:
        var: ec2.instances
